= Simple Inflector for I18n

<b>i18n-inflector version <tt>1.0</tt></b> (<b><tt>Aropsaid</tt></b>)



* https://rubygems.org/gems/i18n-inflector
* https://github.com/siefca/i18n-inflector/tree
* mailto:pw@gnu.org

== Description

This backend module for Ruby's I18n overwrites the Simple backend
translate method so that it will interpolate additional inflection
tokens present in translations. These tokens may appear in *patterns*
which are contained within <tt>@{</tt> and <tt>}</tt>
symbols.

You can choose different kinds (gender, title, person, time, author, etc.)
of tokens to group them in a meaningful, semantical sets. That means you can
apply Inflector to do simple inflection by a gender or a person, when some
language requires it.

Example translation data:

en:
  i18n:
    inflections:
      gender:
        f:        "female"
        m:        "male"
        n:        "neuter"
        male:     @m
        female:   @f
        default:  neuter

  welcome:  "Dear {f:Lady|m:Sir|n:You|All}"

== Why?

It's intended to be used in a web projects or other projects where
tranlations are performed by many people, yet there is a need to
substitute fragments of text depending on user's gender, person or
other data.

To achieve similar functionality lambdas can be used but including
proc objects in translations may be considered as the unsafe idea.

If you have a troop of happy translators that shouldn't have the
ability to execute any code yet you need some simple inflection
then you should use this module.

See i18n-inflector-rails[https://rubygems.org/gems/i18n-inflector-rails] if
you need Rails integration.

== Requirements

* i18n[https://rubygems.org/gems/i18n]
* rake[https://rubygems.org/gems/rake]
* rubygems[http://docs.rubygems.org/]

== Download

==== Source code

* https://github.com/siefca/i18n-inflector/tree
* <tt>git clone git://github.com/siefca/i18n-inflector.git</tt>

==== Gem

* https://rubygems.org/gems/i18n-inflector

== Installation

* <tt>sudo gem install i18n-inflector</tt>

== Synopsis

  require 'i18n-inflector'
  i18n.translate('welcome')

Detailed example:

  I18n.locale = :en
  I18n.backend.store_translations 'en', :i18n => { :inflections => {
                                                     :gender => {
                                                       :f => 'female',
                                                       :m => 'male',
                                                       :n => 'neuter',
                                                       :default => 'n' }}}
   
   I18n.backend.store_translations 'en', 'welcome' => 'Dear @{f:Lady|m:Sir|n:You|All}'
  
   I18n.t('welcome')
   # => "Dear You"
   
   I18n.t('welcome', :gender => :male)
   # => "Dear Sir"
   
   I18n.t('welcome', :gender => :unknown)
   # => "Dear All"
   
   I18n.t('welcome', :gender => nil)
   # => "Dear All"

== Tests

You can run tests both with

* <tt>rake test</tt> or just <tt>rake</tt>
* run a test file directly, e.g. <tt>ruby -Ilib -Itest test/inflector_test.rb</tt>

== More information

See {whole documentation}[http://rubydoc.info/gems/i18n-inflector/] for more info about usage.

See {I18n::Inflector} module documentation for information about API and detailed usage.

See {I18n::Backend::Inflector} module documentation for detailed information about internals.

== See also

See {i18n-inflector-rails}[https://rubygems.org/gems/i18n-inflector-rails] if you need
the Rails plug-in that integrates this module with ActionController.

== License

Copyright (c) 2011 by Paweł Wilk.

i18n-inflector is copyrighted software owned by Paweł Wilk (pw@gnu.org).
You may redistribute and/or modify this software as long as you
comply with either the terms of the LGPL (see {file:LGPL}),
or Ruby's license (see {file:COPYING}).

THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS
OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
FOR A PARTICULAR PURPOSE.
